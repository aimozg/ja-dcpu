apply plugin: 'java'

project.ext.grammarpackage = "dcpu"

sourceSets {
    main {
        java.srcDir 'src'
        resources.srcDir 'resource'
        output.classesDir 'build/classes'
    }
    test {
        java.srcDir 'test'
        resources.srcDir 'resource-test'
        output.classesDir 'build/classes'
    }
}

repositories {
    mavenCentral()
}

configurations {
    antlr3
}

dependencies {
    compile 'org.antlr:antlr-runtime:3.2'
    compile fileTree(dir: 'lib', include: '*.jar')
    antlr3 'org.antlr:antlr:3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

task antlrOutputDir << {
    mkdir(generateGrammarSource.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from Antlr3 grammars.'

    generateGrammarSource.ext.destinationDir = "$buildDir/generated-sources/antlr"
    def antlrSource = 'grammar'

    inputs.dir file(antlrSource)
    outputs.dir file(destinationDir)

    def grammars = fileTree(antlrSource).include('**/*.g')

    main = 'org.antlr.Tool'
    classpath = configurations.antlr3
    args = ["-o", "${destinationDir}/${project.ext.grammarpackage}", grammars.files].flatten()
}

compileJava {
    dependsOn generateGrammarSource
    source generateGrammarSource.destinationDir
}

task all << {
    
}
